schema {
  query: Query
  mutation: Mutation
}

"""
The @defer directive may be specified on a fragment spread to imply de-prioritization, that causes the fragment to be omitted in the initial response, and delivered as a subsequent response afterward. A query with @defer directive will cause the request to potentially return multiple responses, where non-deferred data is delivered in the initial response and data deferred delivered in a subsequent response. @include and @skip take precedence over @defer.
"""
directive @defer(if: Boolean = true, label: String) on FRAGMENT_SPREAD | INLINE_FRAGMENT

input CreateDocumentInput {
  accessKey: String!
  maxViewCount: Int = -1
  ttlMs: Int = -1
  value: String!
}

type Document {
  accessKey: String!
  createdAt: Time!
  id: Int!
  maxViewCount: Int!
  ttlMs: Int!
  updatedAt: Time!
  value: String!
  viewCount: Int!
}

type Mutation {
  createDocument(input: CreateDocumentInput!): Int
  deleteDocument(accessKey: String!, id: Int!): Boolean
  updateDocument(input: UpdateDocumentInput!): Boolean
}

type Query {
  getDocument(id: Int!): Document
}

scalar Time

input UpdateDocumentInput {
  accessKey: String!
  id: Int!
  maxViewCount: Int!
  ttlMs: Int!
  value: String
}